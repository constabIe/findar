"""notifications_update

Revision ID: d862d88bf3aa
Revises: 5443b6bc781d
Create Date: 2025-10-25 16:48:06.368298

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'd862d88bf3aa'
down_revision: Union[str, Sequence[str], None] = '5443b6bc781d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification_channel_configs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('channel', sa.Enum('EMAIL', 'TELEGRAM', name='notificationchannel'), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('retry_delay_seconds', sa.Integer(), nullable=False),
    sa.Column('rate_limit_per_minute', sa.Integer(), nullable=True),
    sa.Column('description', sqlmodel.AutoString(), nullable=True),
    sa.Column('total_sent', sa.Integer(), nullable=False),
    sa.Column('total_failed', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_channel_configs_channel'), 'notification_channel_configs', ['channel'], unique=True)
    op.create_index(op.f('ix_notification_channel_configs_enabled'), 'notification_channel_configs', ['enabled'], unique=False)
    op.create_table('notification_templates',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('FRAUD_ALERT', 'TRANSACTION_BLOCKED', 'SUSPICIOUS_ACTIVITY', 'RULE_MATCHED', 'SYSTEM_ALERT', 'CUSTOM', name='templatetype'), nullable=False),
    sa.Column('channel', sa.Enum('EMAIL', 'TELEGRAM', name='notificationchannel'), nullable=False),
    sa.Column('subject_template', sqlmodel.AutoString(), nullable=True),
    sa.Column('body_template', sqlmodel.AutoString(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('show_transaction_id', sa.Boolean(), nullable=False),
    sa.Column('show_amount', sa.Boolean(), nullable=False),
    sa.Column('show_timestamp', sa.Boolean(), nullable=False),
    sa.Column('show_from_account', sa.Boolean(), nullable=False),
    sa.Column('show_to_account', sa.Boolean(), nullable=False),
    sa.Column('show_triggered_rules', sa.Boolean(), nullable=False),
    sa.Column('show_fraud_probability', sa.Boolean(), nullable=False),
    sa.Column('show_location', sa.Boolean(), nullable=False),
    sa.Column('show_device_info', sa.Boolean(), nullable=False),
    sa.Column('custom_fields', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('description', sqlmodel.AutoString(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_template_channel_enabled', 'notification_templates', ['channel', 'enabled'], unique=False)
    op.create_index('idx_template_priority', 'notification_templates', ['priority'], unique=False)
    op.create_index('idx_template_type', 'notification_templates', ['type'], unique=False)
    op.create_index(op.f('ix_notification_templates_enabled'), 'notification_templates', ['enabled'], unique=False)
    op.create_index(op.f('ix_notification_templates_name'), 'notification_templates', ['name'], unique=False)
    op.create_table('notification_deliveries',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('transaction_id', sa.Uuid(), nullable=False),
    sa.Column('template_id', sa.Uuid(), nullable=False),
    sa.Column('channel', sa.Enum('EMAIL', 'TELEGRAM', name='notificationchannel'), nullable=False),
    sa.Column('subject', sqlmodel.AutoString(), nullable=True),
    sa.Column('body', sqlmodel.AutoString(), nullable=False),
    sa.Column('recipients', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'SENDING', 'DELIVERED', 'FAILED', 'CANCELLED', 'RETRYING', name='notificationstatus'), nullable=False),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('max_attempts', sa.Integer(), nullable=False),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('failed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sqlmodel.AutoString(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('metadata_', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['notification_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_delivery_channel_status', 'notification_deliveries', ['channel', 'status'], unique=False)
    op.create_index('idx_delivery_scheduled', 'notification_deliveries', ['scheduled_at'], unique=False)
    op.create_index('idx_delivery_status_created', 'notification_deliveries', ['status', 'created_at'], unique=False)
    op.create_index('idx_delivery_transaction', 'notification_deliveries', ['transaction_id'], unique=False)
    op.create_index(op.f('ix_notification_deliveries_channel'), 'notification_deliveries', ['channel'], unique=False)
    op.create_index(op.f('ix_notification_deliveries_status'), 'notification_deliveries', ['status'], unique=False)
    op.create_index(op.f('ix_notification_deliveries_template_id'), 'notification_deliveries', ['template_id'], unique=False)
    op.create_index(op.f('ix_notification_deliveries_transaction_id'), 'notification_deliveries', ['transaction_id'], unique=False)
    op.create_table('notification_delivery_attempts',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('delivery_id', sa.Uuid(), nullable=False),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sqlmodel.AutoString(), nullable=True),
    sa.Column('error_code', sqlmodel.AutoString(), nullable=True),
    sa.Column('response_status', sqlmodel.AutoString(), nullable=True),
    sa.Column('response_body', sqlmodel.AutoString(), nullable=True),
    sa.Column('metadata_', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['delivery_id'], ['notification_deliveries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_attempt_delivery', 'notification_delivery_attempts', ['delivery_id'], unique=False)
    op.create_index('idx_attempt_started', 'notification_delivery_attempts', ['started_at'], unique=False)
    op.create_index('idx_attempt_success', 'notification_delivery_attempts', ['success'], unique=False)
    op.create_index(op.f('ix_notification_delivery_attempts_delivery_id'), 'notification_delivery_attempts', ['delivery_id'], unique=False)
    op.drop_table('celery_taskmeta')
    op.drop_table('celery_tasksetmeta')
    op.add_column('users', sa.Column('email_template_id', sa.Uuid(), nullable=True))
    op.add_column('users', sa.Column('telegram_template_id', sa.Uuid(), nullable=True))
    op.add_column('users', sa.Column('email_notifications_enabled', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('telegram_notifications_enabled', sa.Boolean(), nullable=False))
    op.create_foreign_key(None, 'users', 'notification_templates', ['email_template_id'], ['id'])
    op.create_foreign_key(None, 'users', 'notification_templates', ['telegram_template_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'telegram_notifications_enabled')
    op.drop_column('users', 'email_notifications_enabled')
    op.drop_column('users', 'telegram_template_id')
    op.drop_column('users', 'email_template_id')
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('celery_tasksetmeta_pkey')),
    sa.UniqueConstraint('taskset_id', name=op.f('celery_tasksetmeta_taskset_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('celery_taskmeta_pkey')),
    sa.UniqueConstraint('task_id', name=op.f('celery_taskmeta_task_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_index(op.f('ix_notification_delivery_attempts_delivery_id'), table_name='notification_delivery_attempts')
    op.drop_index('idx_attempt_success', table_name='notification_delivery_attempts')
    op.drop_index('idx_attempt_started', table_name='notification_delivery_attempts')
    op.drop_index('idx_attempt_delivery', table_name='notification_delivery_attempts')
    op.drop_table('notification_delivery_attempts')
    op.drop_index(op.f('ix_notification_deliveries_transaction_id'), table_name='notification_deliveries')
    op.drop_index(op.f('ix_notification_deliveries_template_id'), table_name='notification_deliveries')
    op.drop_index(op.f('ix_notification_deliveries_status'), table_name='notification_deliveries')
    op.drop_index(op.f('ix_notification_deliveries_channel'), table_name='notification_deliveries')
    op.drop_index('idx_delivery_transaction', table_name='notification_deliveries')
    op.drop_index('idx_delivery_status_created', table_name='notification_deliveries')
    op.drop_index('idx_delivery_scheduled', table_name='notification_deliveries')
    op.drop_index('idx_delivery_channel_status', table_name='notification_deliveries')
    op.drop_table('notification_deliveries')
    op.drop_index(op.f('ix_notification_templates_name'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_enabled'), table_name='notification_templates')
    op.drop_index('idx_template_type', table_name='notification_templates')
    op.drop_index('idx_template_priority', table_name='notification_templates')
    op.drop_index('idx_template_channel_enabled', table_name='notification_templates')
    op.drop_table('notification_templates')
    op.drop_index(op.f('ix_notification_channel_configs_enabled'), table_name='notification_channel_configs')
    op.drop_index(op.f('ix_notification_channel_configs_channel'), table_name='notification_channel_configs')
    op.drop_table('notification_channel_configs')
    # ### end Alembic commands ###
