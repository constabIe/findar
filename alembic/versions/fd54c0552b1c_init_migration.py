"""init migration

Revision ID: fd54c0552b1c
Revises: 
Create Date: 2025-10-19 16:42:43.791565

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'fd54c0552b1c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rules',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('THRESHOLD', 'PATTERN', 'COMPOSITE', 'ML', name='ruletype'), nullable=False),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('critical', sa.Boolean(), nullable=False),
    sa.Column('description', sqlmodel.AutoString(), nullable=True),
    sa.Column('created_by', sqlmodel.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('execution_count', sa.Integer(), nullable=False),
    sa.Column('match_count', sa.Integer(), nullable=False),
    sa.Column('last_executed_at', sa.DateTime(), nullable=True),
    sa.Column('average_execution_time_ms', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('from_account', sqlmodel.AutoString(), nullable=False),
    sa.Column('to_account', sqlmodel.AutoString(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('type', sa.Enum('TRANSFER', 'DEPOSIT', 'WITHDRAWAL', 'PAYMENT', name='transactiontype'), nullable=False),
    sa.Column('correlation_id', sqlmodel.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('QUEUED', 'PROCESSING', 'APPROVED', 'FLAGGED', 'REJECTED', 'FAILED', name='transactionstatus'), nullable=False),
    sa.Column('currency', sqlmodel.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.AutoString(), nullable=True),
    sa.Column('merchant_id', sqlmodel.AutoString(), nullable=True),
    sa.Column('location', sqlmodel.AutoString(), nullable=True),
    sa.Column('device_id', sqlmodel.AutoString(), nullable=True),
    sa.Column('ip_address', sqlmodel.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rule_cache',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('rule_id', sa.Uuid(), nullable=False),
    sa.Column('cache_key', sqlmodel.AutoString(), nullable=False),
    sa.Column('cached_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('cache_version', sqlmodel.AutoString(), nullable=False),
    sa.Column('hit_count', sa.Integer(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rule_id')
    )
    op.create_table('rule_executions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('rule_id', sa.Uuid(), nullable=False),
    sa.Column('transaction_id', sa.Uuid(), nullable=False),
    sa.Column('correlation_id', sqlmodel.AutoString(), nullable=False),
    sa.Column('matched', sa.Boolean(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('execution_time_ms', sa.Float(), nullable=False),
    sa.Column('context', sa.JSON(), nullable=False),
    sa.Column('error_message', sqlmodel.AutoString(), nullable=True),
    sa.Column('executed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rule_executions')
    op.drop_table('rule_cache')
    op.drop_table('transactions')
    op.drop_table('rules')
    # ### end Alembic commands ###
